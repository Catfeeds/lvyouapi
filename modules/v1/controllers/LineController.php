<?php
/**
 * Created by PhpStorm.
 * User: 张鹏飞
 * Date: 2018/1/17
 * Time: 13:43
 */

namespace app\modules\v1\controllers;


use app\modules\components\helpers\TengchongOrders;
use app\modules\v1\models\Comment;
use app\modules\v1\models\Destinations;
use app\modules\v1\models\Icon;
use app\modules\v1\models\Line;
use app\modules\v1\models\LineAttr;
use app\modules\v1\models\LineDayspot;
use app\modules\v1\models\LineJieshao;
use app\modules\v1\models\LineSuit;

class LineController extends DefaultController
{

    public $typeid;

    public function beforeAction($action)
    {
        $this->typeid = \Yii::$app->params['typeid']['line'];
        return parent::beforeAction($action); // TODO: Change the autogenerated stub

    }


    // 根据条件获得所有的线路信息
    public function actionLister()
    {
        $request        =        \Yii::$app->request;
        $param          =        $request->get('param',0);
        $page           =        $request->get('page',1);
        $keyword        =        htmlentities(strip_tags($request->get('keyword','')));
        // 对参数进行处理
        $params         =        explode('-',$param);
        if(count($params) != 3) return ['code'=>200,'msg'=>'参数错误','data'=>null];

        // 根据参数获得数据
        $lineModel      =        new Line();
        // 增加缓存
        $cache          =       \Yii::$app->cache;
        $key            =       'line-lister_page_'.$page;
        $dependency     =       new \yii\caching\DbDependency(['sql'=>'select count(*) from sline_line']);
        if(empty($keyword))
        {
            $line           =       $cache->getOrSet($key , function() use ($lineModel,$param,$page,$keyword){
                $iconModel      =        new Icon();
                $line = $lineModel->listerPyParam($param,$page,$keyword);
                if($page > $line['pagecount'])
                    return false;
                // 根据iconlist 获得icon标签
                foreach ($line['line'] as $k=>$v)
                {
                    $iconlist             = explode(',',$v['iconlist']);
                    $line['line'][$k]['iconlist'] = $iconModel->getIconTwoNameByIds($iconlist);
                }
                return $line;
            },50,$dependency);
        }else{
            $iconModel      =        new Icon();
            $line = $lineModel->listerPyParam($param,$page,$keyword);
            if($page > $line['pagecount'])
            {
                $line = '';
            }else{
                // 根据iconlist 获得icon标签
                foreach ($line['line'] as $k=>$v)
                {
                    $iconlist             = explode(',',$v['iconlist']);
                    $line['line'][$k]['iconlist'] = $iconModel->getIconTwoNameByIds($iconlist);
                }
            }

        }

        if(!$line)
            return ['code'=>200,'data'=>['pagecount'=>'','data'=>[]],'msg'=>'没有更多的数据了'];
        else{
            // 对数据的litpic处理
            $app_url        =       \Yii::$app->params['app_url'];
            foreach ($line['line'] as $k=>$v)
            {
                if(!empty($v['litpic']) && !strpos($v['litpic'],'ttp'))
                    $line['line'][$k]['litpic']  = $app_url . $v['litpic'];
            }
            return ['code' => 200, 'data' => $line, 'msg' => 'ok'];
        }
    }

    public function actionDetail()
    {
        $request        =       \Yii::$app->request;
        $id             =       $request->get('id',null);
        $app_url        =       \Yii::$app->params['app_url'];
        if(!$id)
            return ['code'=>404,'data'=>'','msg'=>'未找到相关数据'];

        // 根据id获得线路的基本信息
        $lineObj       =       new Line();
        $line          =        $lineObj->lineDetail($id);
        if(empty($line))
            return ['code'=>404,'data'=>'','msg'=>'未找到相关数据'];

        // 处理图片
        $line['piclist']  = explode(',',$line['piclist']);
        if(!empty($line['piclist']))
            foreach ($line['piclist'] as $k=>$v)
            {
                $line['piclist'][$k] = $app_url . explode('||',$v)[0];
            }

        // 编号,评价
        $line['series'] = TengchongOrders::getSeries($id,'01');
        $line['commentcount'] = Comment::getCommentCountByTypeId($this->typeid,$id);

        // 获取天数具体信息
        $lineJieshaoObj = new LineJieshao();
        $lineSpotObj = new LineDayspot();
        $daymessage = $lineJieshaoObj->getJieshaoById($id);
        foreach ($daymessage as $k=>$v)
        {
            $daymessage[$k]['jieshao'] = str_replace('"/uploads/', '"' .$app_url . '/uploads/' ,$v['jieshao']);
            $dayspot = $lineSpotObj->getDayMessageByLineId($v['lineid'],$v['day']);
            if(!empty($dayspot))
            {
                foreach ($dayspot as $sk=>$sv)
                {
                    if($sv['litpic'])
                        $dayspot[$sk]['litpic'] = $app_url . $sv['litpic'];
                }
            }
            $daymessage[$k]['dayspot'] = $dayspot;

        }
        $line['daymessage'] = $daymessage;

        return ['code'=>200,'data'=>$line,'msg'=>'ok'];

    }

    // 线路套餐类型和说明
    public function actionSuit()
    {
        $id = \Yii::$app->request->get('id','');
        if(!$id)
            return ['code'=>404,'data'=>'','msg'=>'未找到相关数据'];

        $lineSuitObj = new LineSuit();
        $lineSuit = $lineSuitObj->getSuitByLineId($id);
        if(empty($lineSuit))
            return ['code'=>404,'data'=>'','msg'=>'未找到相关数据'];
        foreach ($lineSuit as $k=>$v)
        {
            $lineSuit[$k]['propgroup'] = explode(',',$v['propgroup']);
        }
        return ['code'=>200,'data'=>$lineSuit,'msg'=>'ok'];
    }

    // 线路收藏
    public function actionCollection()
    {
        if(!$this->logsign)
            return ['code'=>401,'data'=>null,'msg'=>'用户没登录'];

        $request = \Yii::$app->request;
        $id     =   $request->get('id');
        $re =  \Yii::$app->runAction('v1/collection/add-collection',['typeid'=>$this->typeid,'indexid'=>$id,'mid'=>$this->mid]);
        if($re)
            return ['code'=>200,'msg'=>'收藏成功','data'=>null];
        else
            return ['code'=>403,'msg'=>'收藏失败','data'=>null];
    }

    // 线路取消收藏
    public function actionDelCollection()
    {
        if(! $this->logsign)
            return array('code'=>401,'data'=>'','msg'=>'用户未登录');
        $typeid = $this->typeid;

        $mid = $this->mid;
        $indexid = \Yii::$app->request->get('id');
        $re =  \Yii::$app->runAction('v1/collection/del-collection',['typeid'=>$typeid,'indexid'=>$indexid,'mid'=>$mid]);
        if($re)
            return ['code'=>200,'msg'=>'取消成功','data'=>null];
        else
            return ['code'=>403,'msg'=>'取消失败','data'=>null];
    }

    // 线路上部信息总计
    public function actionCommentHead()
    {
        $commentObj             =       new Comment();
        $request                =       \Yii::$app->request;
        $typeid                 =       $this->typeid;
        $hotelid                =       $request->get('id');
        $commentArr             =       $commentObj->getCommentStarCount($typeid,$hotelid);
        $commentCount           =       $commentObj->getLevelComment($commentArr);
        $commentCount['count']  =       $commentObj->getCommentCountByTypeId($typeid,$hotelid);
        $commentCount['imgcount']=      $commentObj->getCommentHasImg($typeid,$hotelid);
        return ['code'=>200,'data'=> $commentCount,'msg'=>'ok'];

    }

    // 线路列表
    public function actionCommentLister()
    {
        $request                =       \Yii::$app->request;
        $id                     =       $request->get('id');
        $page                   =       $request->get('page');
        $typeid                 =       \Yii::$app->params['typeid']['hotel'];
        $commentPage            =       Comment::getCommentByPage($typeid,$id,$page);
        if(! $commentPage)
            return ['code'=>404,'msg'=>'未找到数据','data'=>''];
        $commentListerArr       =       $commentPage['commentlist'] ;
        $commentPageCount       =       $commentPage['pagecount'] ;
        if(empty($commentListerArr))
            return ['code'=>404,'msg'=>'未找到数据','data'=>''];

        // 对拿到的信息进行虚拟用户和真是用户信息混合
        $app_url                =       \Yii::$app->params['app_url'];
        $commentLister =  \Yii::$app->runAction('v1/comment/get-member',['commentArr'=>$commentListerArr,'app_url'=>$app_url]);
        $data       =       ['comment'=>$commentLister,'pagecount'=>$commentPageCount];
        return ['code'=>200,'data'=>$data,'msg'=>'ok'];
    }



    // 线路条件 - 综合
    public function actionCondition()
    {
        $city       =       $this->runAction('line-city');
        $othercondition =   $this->runAction('line-other-conditions');
        $screencondition=   $this->runAction('line-screen-condition');
        $data       =       [
            'city'      =>  $city,
            'othercondition'    =>  $othercondition,
            'screencondition'   =>  $screencondition
        ];

        return ['code'=>200,'data'=>$data,'msg'=>'ok'];
    }

    // 线路板块-列表-条件-城市
    public function actionLineCity()
    {
        $spotcity = Destinations::getTengchongCity();
        array_unshift($spotcity,['id'=>404,'kindname'=>'全城','pinyin'=>'allcity']);
        return $spotcity;
    }

    // 线路板块-列表-條件-綜合
    public function actionLineOtherConditions()
    {
        $condition = \Yii::$app->params['spot_condition_other'];
        return $condition;
    }

    // 酒店模塊-列表-條件-篩選
    public function actionLineScreenCondition()
    {
        // 對一級屬性和二級屬性進行篩選
        $screen =  LineAttr::getAllAttr();
        // 分別對二級屬性添加不限
        foreach ($screen as $k=>$v)
        {
            if(empty($screen[$k]['son'])) $screen[$k]['son'] = [] ;
            array_unshift($screen[$k]['son'],['id'=>0,'pid'=>$v['id'],'attrname'=>'不限']);
        }
        return $screen;
    }



}