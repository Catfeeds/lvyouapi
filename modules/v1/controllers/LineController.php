<?php
/**
 * Created by PhpStorm.
 * User: 张鹏飞
 * Date: 2018/1/17
 * Time: 13:43
 */

namespace app\modules\v1\controllers;


use app\modules\components\helpers\FeiValidate;
use app\modules\components\helpers\MyDateFormat;
use app\modules\components\helpers\TengchongOrders;
use app\modules\v1\models\Collection;
use app\modules\v1\models\Comment;
use app\modules\v1\models\Destinations;
use app\modules\v1\models\Icon;
use app\modules\v1\models\Line;
use app\modules\v1\models\LineAttr;
use app\modules\v1\models\LineDayspot;
use app\modules\v1\models\LineJieshao;
use app\modules\v1\models\LineSuit;
use app\modules\v1\models\LineSuitPrice;
use app\modules\v1\models\MemberLinkman;
use app\modules\v1\models\MemberOrderTourer;

class LineController extends DefaultController
{

    public $typeid;

    public function beforeAction($action)
    {
        $this->typeid = \Yii::$app->params['typeid']['line'];
        return parent::beforeAction($action); // TODO: Change the autogenerated stub

    }

    // 根据条件获得所有的线路信息
    public function actionLister()
    {
        $request        =        \Yii::$app->request;
        $param          =        $request->get('param',0);
        $page           =        $request->get('page',1);
        $keyword        =        htmlentities(strip_tags($request->get('keyword','')));
        // 对参数进行处理
        $params         =        explode('-',$param);
        if(count($params) != 3) return ['code'=>200,'msg'=>'参数错误','data'=>null];

        // 根据参数获得数据
        $lineModel      =        new Line();
        // 增加缓存
        $cache          =       \Yii::$app->cache;
        $key            =       'line-lister_page_'.$page;
        $dependency     =       new \yii\caching\DbDependency(['sql'=>'select count(*) from sline_line']);
        if(empty($keyword))
        {
            $line           =       $cache->getOrSet($key , function() use ($lineModel,$param,$page,$keyword){
                $iconModel      =        new Icon();
                $line = $lineModel->listerPyParam($param,$page,$keyword);
                if($page > $line['pagecount'])
                    return false;
                // 根据iconlist 获得icon标签
                foreach ($line['line'] as $k=>$v)
                {
                    $iconlist             = explode(',',$v['iconlist']);
                    $line['line'][$k]['iconlist'] = $iconModel->getIconTwoNameByIds($iconlist);
                }
                return $line;
            },50,$dependency);
        }else{
            $iconModel      =        new Icon();
            $line = $lineModel->listerPyParam($param,$page,$keyword);
            if($page > $line['pagecount'])
            {
                $line = '';
            }else{
                // 根据iconlist 获得icon标签
                foreach ($line['line'] as $k=>$v)
                {
                    $iconlist             = explode(',',$v['iconlist']);
                    $line['line'][$k]['iconlist'] = $iconModel->getIconTwoNameByIds($iconlist);
                }
            }

        }

        if(!$line)
            return ['code'=>200,'data'=>['pagecount'=>'','data'=>[]],'msg'=>'没有更多的数据了'];
        else{
            // 对数据的litpic处理
            $app_url        =       \Yii::$app->params['app_url'];
            foreach ($line['line'] as $k=>$v)
            {
                if(!empty($v['litpic']) && !strpos($v['litpic'],'ttp'))
                    $line['line'][$k]['litpic']  = $app_url . $v['litpic'];
            }
            return ['code' => 200, 'data' => $line, 'msg' => 'ok'];
        }
    }

    // 线路详情
    public function actionDetail()
    {
        $request        =       \Yii::$app->request;
        $id             =       $request->get('id',null);
        $app_url        =       \Yii::$app->params['app_url'];
        $api_url        =       \Yii::$app->params['api_url'];
        if(!$id)
            return ['code'=>404,'data'=>'','msg'=>'未找到相关数据'];

        // 根据id获得线路的基本信息
        $lineObj       =       new Line();
        $line          =        $lineObj->lineDetail($id);
        if(empty($line))
            return ['code'=>404,'data'=>'','msg'=>'未找到相关数据'];

        // 处理带标签的信息 产品特色
        $line['features'] = $api_url . '/v1/initstringshort?mystrings='.$line['features'];
        $line['jieshao'] = $api_url . '/v1/initstringlong/line_jieshao/'.$id;
        $line['feeinclude'] = $api_url . '/v1/initstringlong/line_feeinclude/'.$id;
        $line['payment'] = $api_url . '/v1/initstringlong/line_payment/'.$id;

        // 处理图片
        $line['piclist']  = explode(',',$line['piclist']);
        if(!empty($line['piclist']))
            foreach ($line['piclist'] as $k=>$v)
            {
                $line['piclist'][$k] = $app_url . explode('||',$v)[0];
            }

        // 编号,评价
        $line['series'] = TengchongOrders::getSeries($id,'01');
        $line['commentcount'] = Comment::getCommentCountByTypeId($this->typeid,$id);
        // 获取天数具体信息
        $lineJieshaoObj = new LineJieshao();
        $lineSpotObj = new LineDayspot();
        $daymessage = $lineJieshaoObj->getJieshaoById($id);
        foreach ($daymessage as $k=>$v)
        {
            $daymessage[$k]['jieshao'] = $api_url . '/v1/initstringlong/line_day_jieshao/'.$v['id'];
            $dayspot = $lineSpotObj->getDayMessageByLineId($v['lineid'],$v['day']);

            if(!empty($dayspot))
            {
                foreach ($dayspot as $sk=>$sv)
                {
                    if($sv['litpic'])
                        $dayspot[$sk]['litpic'] = $app_url . $sv['litpic'];
                }
            }
            $daymessage[$k]['dayspot'] = $dayspot;
        }
        $line['daymessage'] = $daymessage;

        // 判断是否收藏
        $collectionObj = new Collection();
        if(!$this->logsign)
            $line['iscollect'] = 0;
        elseif( $collectionObj->isCollection($this->typeid,$id,$this->mid))
            $line['iscollect'] = 1;
        else
            $line['iscollect'] = 0;

        return ['code'=>200,'data'=>$line,'msg'=>'ok'];
    }

    // 线路套餐类型和说明
    public function actionSuit()
    {
        $id = \Yii::$app->request->get('id','');
        if(!$id)
            return ['code'=>404,'data'=>'','msg'=>'未找到相关数据'];

        $lineSuitObj = new LineSuit();
        $lineSuit = $lineSuitObj->getSuitByLineId($id);
        if(empty($lineSuit))
            return ['code'=>404,'data'=>'','msg'=>'未找到相关数据'];

        $api_url = \Yii::$app->params['api_url'];
        foreach ($lineSuit as $k=>$v)
        {
            $lineSuit[$k]['description'] = $api_url . '/v1/initstringlong/line_suit_des/'.$v['id'];
            $lineSuit[$k]['propgroup'] = explode(',',$v['propgroup']);
        }
        return ['code'=>200,'data'=>$lineSuit,'msg'=>'ok'];
    }

    // 线路上部信息总计
    public function actionCommentHead()
    {
        $commentObj             =       new Comment();
        $request                =       \Yii::$app->request;
        $typeid                 =       $this->typeid;
        $hotelid                =       $request->get('id');
        $commentArr             =       $commentObj->getCommentStarCount($typeid,$hotelid);
        $commentCount           =       $commentObj->getLevelComment($commentArr);
        $commentCount['count']  =       $commentObj->getCommentCountByTypeId($typeid,$hotelid);
        $commentCount['imgcount']=      $commentObj->getCommentHasImg($typeid,$hotelid);
        return ['code'=>200,'data'=> $commentCount,'msg'=>'ok'];
    }

    // 线路列表
    public function actionCommentLister()
    {
        $request                =       \Yii::$app->request;
        $id                     =       $request->get('id');
        $page                   =       $request->get('page');
        $typeid                 =       \Yii::$app->params['typeid']['hotel'];
        $commentPage            =       Comment::getCommentByPage($typeid,$id,$page);
        if(! $commentPage)
            return ['code'=>404,'msg'=>'未找到数据','data'=>''];
        $commentListerArr       =       $commentPage['commentlist'] ;
        $commentPageCount       =       $commentPage['pagecount'] ;
        if(empty($commentListerArr))
            return ['code'=>404,'msg'=>'未找到数据','data'=>''];

        // 对拿到的信息进行虚拟用户和真是用户信息混合
        $app_url                =       \Yii::$app->params['app_url'];
        $commentLister =  \Yii::$app->runAction('v1/comment/get-member',['commentArr'=>$commentListerArr,'app_url'=>$app_url]);
        $data       =       ['comment'=>$commentLister,'pagecount'=>$commentPageCount];
        return ['code'=>200,'data'=>$data,'msg'=>'ok'];
    }

    // 获得线路的id - 时间详情
    public function actionSuitLineIdDay()
    {
        $request  = \Yii::$app->request;
        $id         = $request->get('id',null);
        $api_url = \Yii::$app->params['api_url'];
        if(!$id)
            return ['code'=>403,'msg'=>'参数非法','data'=>null];

        // 根据线路id获得套餐
        $linSuitObj = new LineSuit();
        $suit = $linSuitObj->getSuitByLineId($id);
        if(empty($suit))
            return ['code'=>404,'msg'=>'信息未找到','data'=>null];


        $linSuitPriceObj = new LineSuitPrice();
        // 根据套餐id获得高于当前日期的所有信息
        $myDateFormat = new MyDateFormat();
        foreach ($suit as $k=>$v)
        {
            $suit[$k]['propgroup'] = explode(',',$v['propgroup']);
            $suit[$k]['description'] = $api_url . '/v1/initstringlong/line_suit_des/' . $v['id'] ;
            $days = $linSuitPriceObj->getSuitDetailList($v['id'],2);
            // 格式化前两天的时间格式
            $suit[$k]['day'] = $myDateFormat->initTwoDate($days);
        }
        return ['code'=>200,'data'=>$suit,'msg'=>'ok'];
    }

    // 根据线路套餐id - 时间详情
    public function actionSuitIdDay()
    {
        $id = \Yii::$app->request->get('id',null);
        if(!$id)
            return ['code'=>403,'msg'=>'参数非法','data'=>null];

        // 根据套餐id - 时间详情
        $linSuitPriceObj = new LineSuitPrice();
        $day = $linSuitPriceObj->getSuitDetailList($id);

        //对日期进行格式化
        $mydateObj = new MyDateFormat();
        $day =  $mydateObj->initDate($day,'day');
        return ['code'=>200,'data'=>$day,'msg'=>'ok'];
    }

    // 线路条件 - 综合
    public function actionCondition()
    {
        $city       =       $this->runAction('line-city');
        $othercondition =   $this->runAction('line-other-conditions');
        $screencondition=   $this->runAction('line-screen-condition');
        $data       =       [
            'city'      =>  $city,
            'othercondition'    =>  $othercondition,
            'screencondition'   =>  $screencondition
        ];

        return ['code'=>200,'data'=>$data,'msg'=>'ok'];
    }

    // 线路板块-列表-条件-城市
    public function actionLineCity()
    {
        $spotcity = Destinations::getTengchongCity();
        array_unshift($spotcity,['id'=>404,'kindname'=>'全城','pinyin'=>'allcity']);
        return $spotcity;
    }

    // 线路板块-列表-條件-綜合
    public function actionLineOtherConditions()
    {
        $condition = \Yii::$app->params['spot_condition_other'];
        return $condition;
    }

    // 线路模塊-列表-條件-篩選
    public function actionLineScreenCondition()
    {
        // 對一級屬性和二級屬性進行篩選
        $screen =  LineAttr::getAllAttr();
        // 分別對二級屬性添加不限
        foreach ($screen as $k=>$v)
        {
            if(empty($screen[$k]['son'])) $screen[$k]['son'] = [] ;
            array_unshift($screen[$k]['son'],['id'=>0,'pid'=>$v['id'],'attrname'=>'不限']);
        }
        return $screen;
    }

    // 提交订单 -- 景区结算价,分销商结算价 目前有疑惑
    public function actionAddOrder()
    {
        // 对是否登录进行判断
        if(!$this->logsign) return ['code'=>401,'msg'=>'请登录','data'=>''];
        $result = \Yii::$app->request->post();
        $typeid =  $this->typeid;
        $data = [
            'typeid'        =>$typeid,                                  // 类型id
            'memberid'      =>$this->mid,                               // 用户id
            'suitid'        =>$result['suitid'],                        // 套餐的id
            'usedate'       =>date('Y-m-d',$result['usedate']), // 使用时间
            'linkman'       =>$result['linkman'],                       // 联系人
            'linktel'       =>$result['linktel'],                       // 联系电话
            'addtime'       =>time(),                                   // 订单创建时间
            'childnum'      =>$result['childnum'],                      // 小孩数量
            'oldnum'        =>$result['oldnum'],                        // 老人数量
            'remark'        =>$result['remark'],                        // 备注
        ];
        // 预定数量 - 总预定量(包含小孩和老人)
        $data['dingnum']  = $result['adultnum'] + $result['childnum'] + $result['oldnum'];
        if($data['childnum'] > 0)
            $data['haschild'] = 1;

        // 对必须数据进行验证
        if(  empty($data['suitid']) || empty($data['usedate']) || empty($data['linkman']) ||
            empty($data['linktel']) || empty($data['dingnum']))
            return ['code'=>400,'data'=>'','msg'=>'参数不能为空'];

        // 验证手机号
        if(!FeiValidate::isMobile($data['linktel']))
            return ['code'=>4001,'data'=>null,'msg'=>'手机号格式不正确'];

        // 根据suitid查询线路id
        $lineSuitObj            =   new LineSuit();
        $lineid                 =   $lineSuitObj->getSuitBySuitId($data['suitid'])['lineid'];
        if(!$lineid)
            return ['code'=>4001,'data'=>null,'msg'=>'线路未找到'];

        // 根据线路id获得相关信息 , title,litpic,id,aid
        $lineObj                =   new Line();
        $lineEasyMessage        =   $lineObj->getEasyLineByid($lineid);
        $data['productaid']     =   $lineEasyMessage['aid'];
        $data['productautoid']  =   $lineid;
        $data['supplierlist']   =   $lineEasyMessage['supplierlist'];
        $data['litpic']         =   $lineEasyMessage['litpic'];
        $data['productname']    =   $lineEasyMessage['title'] ;

        // 对线路提前预定天数进行处理(价格)
        $nowtime                =   strtotime(date('Y-m-d',time()));
        if(($result['usedate'] - $nowtime) / 86400 < $lineEasyMessage['linebefore'])
            return ['code'=>4001,'data'=>null,'msg'=>'请提前' . $lineEasyMessage['linebefore'] . '天预定'];

        // 选择当前日期的门票价格
        $suitPriceObj           =   new LineSuitPrice();
        $suitprice              =   $suitPriceObj->getSuitPriceByUseDay($data['suitid'],$result['usedate']);
        if( $suitprice['number'] != -1 && $suitprice['number'] <1 )
            return ['code'=>4001,'data'=>'','msg'=>'库存不足,请选择其它商品'];

        // 处理单房差数量 和价格
        $data['roombalancenum'] = $result['roombalancenum'];
        $data['roombalance']    = $suitprice['roombalance'];
        // 处理基本价格
        $data['price']          = $suitprice['adultprice'];
        $data['marketprice']    = $lineEasyMessage['storeprice'];
        $data['childprice']     = $suitprice['childprice'];
        $data['oldprice']       = $suitprice['oldprice'];
        // 对联系人进行初步处理(联系人以,拼接形式传递id)
        $tourer = explode(',',$result['tourer']);
        if(count($tourer) != $data['dingnum'])  return ['code'=>4001,'data'=>'','msg'=>'请选择游客信息'];

        // 根据条件查到所有的游客信息
        $linkmans = MemberLinkman::getLinkmanByIds($tourer);
        if(empty($linkmans)) return ['code'=>4002,'data'=>'','msg'=>'游客信息错误'];

        // 后期增加积分策略
        $data['needjifen'] = 0;
        // 生成订单操作
        $orderid = \Yii::$app->runAction('v1/member-order/add-order',['data'=>$data]);
        // 生成订单成功后减少库存 - 事务 (是付款减库存还是下单减库存,待定)
        // 对游客信息进行数据保存
        foreach ($linkmans as $k=>$v)
        {
            $linkmans[$k] = [
                'orderid'       =>  $orderid,
                'tourername'    =>  $v['linkman'],
                'sex'           =>  $v['sex'],
                'cardtype'      =>  $v['cardtype'],
                'cardnumber'    =>  $v['idcard'],
                'mobile'        =>  $v['mobile']
            ] ;
        }
        // 增加游客地址记录
        $re = \Yii::$app->db->createCommand()
            ->batchInsert(MemberOrderTourer::tableName(),['orderid','tourername','sex','cardtype','cardnumber','mobile'] , $linkmans)
            ->execute();

        if($re)
            return ['code'=>200,'data'=>'','msg'=>'订单创建成功'];
        else
            return ['code'=>200,'data'=>'','msg'=>'订单创建成功,游客添加失败'];

    }



}